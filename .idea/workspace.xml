<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="e3e46536-bf33-4ffe-b6c8-14f60b51b62e" name="Changes" comment="Add health checks and update Docker configurations for client and server">
      <change afterPath="$PROJECT_DIR$/NexaPod_CLI/main.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/scripts/NexaPod.ps1" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/scripts/NexaPod.sh" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/copilotDiffState.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/copilotDiffState.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Docs/ARCHITECTURE.md" beforeDir="false" afterPath="$PROJECT_DIR$/Docs/ARCHITECTURE.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Infrastructure/api.py" beforeDir="false" afterPath="$PROJECT_DIR$/Infrastructure/api.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Infrastructure/perf_estimator.py" beforeDir="false" afterPath="$PROJECT_DIR$/Infrastructure/perf_estimator.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Infrastructure/runner.py" beforeDir="false" afterPath="$PROJECT_DIR$/Infrastructure/runner.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Infrastruture/Dockerfile.client" beforeDir="false" afterPath="$PROJECT_DIR$/Infrastruture/Dockerfile.client" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Infrastruture/Dockerfile.server" beforeDir="false" afterPath="$PROJECT_DIR$/Infrastruture/Dockerfile.server" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Server/db.py" beforeDir="false" afterPath="$PROJECT_DIR$/Server/db.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Server/requirements.txt" beforeDir="false" afterPath="$PROJECT_DIR$/Server/requirements.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/nexapod/__init__.py" beforeDir="false" afterPath="$PROJECT_DIR$/NexaPod_CLI/__init__.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pyproject.toml" beforeDir="false" afterPath="$PROJECT_DIR$/pyproject.toml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/uv.lock" beforeDir="false" afterPath="$PROJECT_DIR$/uv.lock" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Python Script" />
        <option value="HTML File" />
      </list>
    </option>
  </component>
  <component name="FlaskConsoleOptions" custom-start-script="import sys; print('Python %s on %s' % (sys.version, sys.platform)); sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;from flask.cli import ScriptInfo, NoAppException&#10;for module in [&quot;main.py&quot;, &quot;wsgi.py&quot;, &quot;app.py&quot;]:&#10;    try: locals().update(ScriptInfo(app_import_path=module, create_app=None).load_app().make_shell_context()); print(&quot;\nFlask App: %s&quot; % app.import_name); break&#10;    except NoAppException: pass">
    <envs>
      <env key="FLASK_APP" value="app" />
    </envs>
    <option name="myCustomStartScript" value="import sys; print('Python %s on %s' % (sys.version, sys.platform)); sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;from flask.cli import ScriptInfo, NoAppException&#10;for module in [&quot;main.py&quot;, &quot;wsgi.py&quot;, &quot;app.py&quot;]:&#10;    try: locals().update(ScriptInfo(app_import_path=module, create_app=None).load_app().make_shell_context()); print(&quot;\nFlask App: %s&quot; % app.import_name); break&#10;    except NoAppException: pass" />
    <option name="myEnvs">
      <map>
        <entry key="FLASK_APP" value="app" />
      </map>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="PREVIOUS_COMMIT_AUTHORS">
      <list>
        <option value="Darkstalker &lt;allanw.mk@gmail.com&gt;" />
      </list>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
    <option name="SIGN_OFF_COMMIT" value="true" />
    <option name="UPDATE_TYPE" value="REBASE" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;DarkStarStrix&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/DarkStarStrix/NexaPod.git&quot;,
    &quot;accountId&quot;: &quot;138b32ea-18a8-49cc-9639-12c0b010e1bc&quot;
  }
}</component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 3
}</component>
  <component name="ProjectId" id="2zK7F1fwVMoifJmrzcI2QANPhJx" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
    <option name="showScratchesAndConsoles" value="false" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "DefaultHtmlFileTemplate": "HTML File",
    "ModuleVcsDetector.initialDetectionPerformed": "true",
    "Python.check_lint.executor": "Run",
    "Python.main.executor": "Run",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.TerminalTabsStorage.copyFrom.TerminalArrangementManager": "true",
    "RunOnceActivity.TerminalTabsStorage.copyFrom.TerminalArrangementManager.252": "true",
    "RunOnceActivity.git.unshallow": "true",
    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "SHELLCHECK.PATH": "C:\\Users\\kunya\\AppData\\Roaming\\JetBrains\\PyCharm2025.1\\plugins\\Shell Script\\shellcheck.exe",
    "Shell Script.NexaPod.sh.executor": "Run",
    "git-widget-placeholder": "main",
    "last_opened_file_path": "C:/Users/kunya/PycharmProjects/Auto_Api",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "settings.editor.selected.configurable": "preferences.pluginManager",
    "vue.rearranger.settings.migration": "true"
  },
  "keyToStringList": {
    "stardust.markdown.MarkdownSplitEditorSuppressor:keyList": []
  }
}]]></component>
  <component name="RunManager" selected="Shell Script.NexaPod.sh">
    <configuration name="check_lint" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
      <module name="NexaPod" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/scripts" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/scripts/check_lint.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="main" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
      <module name="NexaPod" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/NexaPod_CLI" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/NexaPod_CLI/main.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="NexaPod.sh" type="ShConfigurationType" temporary="true">
      <option name="SCRIPT_TEXT" value="" />
      <option name="INDEPENDENT_SCRIPT_PATH" value="true" />
      <option name="SCRIPT_PATH" value="$PROJECT_DIR$/scripts/NexaPod.sh" />
      <option name="SCRIPT_OPTIONS" value="" />
      <option name="INDEPENDENT_SCRIPT_WORKING_DIRECTORY" value="true" />
      <option name="SCRIPT_WORKING_DIRECTORY" value="$PROJECT_DIR$/scripts" />
      <option name="INDEPENDENT_INTERPRETER_PATH" value="false" />
      <option name="INTERPRETER_PATH" value="$PROJECT_DIR$/../../../../ProgramData/Microsoft/Windows/Start Menu/Programs/PowerShell/PowerShell 7-preview (x64).lnk" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="EXECUTE_IN_TERMINAL" value="true" />
      <option name="EXECUTE_SCRIPT_FILE" value="true" />
      <envs />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Shell Script.NexaPod.sh" />
        <item itemvalue="Python.main" />
        <item itemvalue="Python.check_lint" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-python-sdk-b3ae9b5d7125-f0eec537fc84-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-252.23892.439" />
      </set>
    </attachedChunks>
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="e3e46536-bf33-4ffe-b6c8-14f60b51b62e" name="Changes" comment="" />
      <created>1751467805901</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1751467805901</updated>
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VcsManagerConfiguration">
    <ignored-roots>
      <path value="$PROJECT_DIR$/.." />
    </ignored-roots>
    <MESSAGE value="Add initial implementation of NexaPod components and structure" />
    <MESSAGE value="Add contributor wall app and update dependencies in requirements" />
    <MESSAGE value="Add Kubernetes manifests, Prometheus integration, and enhance client-server communication" />
    <MESSAGE value="Add NEXAPod infrastructure components, implement job scheduling, and enhance API functionality" />
    <MESSAGE value="Add NexaPod components, update requirements, and enhance documentation" />
    <MESSAGE value="Add &quot;Coming Soon&quot; placeholders, improve code formatting, and enhance contributor wall app" />
    <MESSAGE value="Add &quot;Coming Soon&quot; placeholders, improve code formatting, and introduce linting scripts" />
    <MESSAGE value="Update README.md with project overview and key concepts; modify copilotDiffState.xml for README tracking" />
    <MESSAGE value="Refactor rate limiting implementation, add Redis support, and improve code formatting" />
    <MESSAGE value="Refactor code formatting in executor.py and dashboard.py for improved readability" />
    <MESSAGE value="Refactor code formatting in app.py and dashboard.py for improved readability" />
    <MESSAGE value="Refactor app.py and dashboard.py for improved readability; add replication module with job descriptor and strategies" />
    <MESSAGE value="Refactor dashboard.py and replication.py for improved readability and code formatting" />
    <MESSAGE value="Update CI configuration for improved error handling and conditional execution" />
    <MESSAGE value="Rename Infrastruture to Infrastructure and improve error logging in replication.py" />
    <MESSAGE value="Add Dockerfile for client and server; update CI to build images from the current directory" />
    <MESSAGE value="Update CI configuration for Docker build and deployment; fix paths in Dockerfiles and update requirements" />
    <MESSAGE value="Refactor project structure and improve API functionality; rename Infrastruture to Infrastructure, add job and node management endpoints, and enhance Docker configurations" />
    <MESSAGE value="Update CI configuration to use lowercase repository owner in Docker image tags and pull commands" />
    <MESSAGE value="Update CI configuration to use a long-lived Deploy Token for GHCR login and improve Dockerfile paths" />
    <MESSAGE value="Update CI configuration to use a long-lived Deploy Token for GHCR login and add method to retrieve all registered nodes" />
    <MESSAGE value="Upgrade pip in Dockerfile and update workspace.xml to reflect recent CI changes" />
    <MESSAGE value="Refactor CI and Docker configurations to upgrade pip, streamline dependency installation, and add requirements files for client and server" />
    <MESSAGE value="Update CI permissions to allow read access for contents and write access for packages" />
    <MESSAGE value="Add health checks and update Docker configurations for client and server" />
    <option name="LAST_COMMIT_MESSAGE" value="Add health checks and update Docker configurations for client and server" />
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/NexaPod$check_lint.coverage" NAME="check_lint Coverage Results" MODIFIED="1753828085409" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/scripts" />
  </component>
</project>