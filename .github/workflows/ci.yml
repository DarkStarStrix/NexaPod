name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Run tests (placeholder)
        run: |
          # Add your test commands here, e.g., pytest
          echo "No tests configured. Passing by default."

  build_and_push:
    needs: test
    runs-on: ubuntu-latest
    # Only run this job on pushes to the main branch, not on pull requests
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push images
        run: |
          OWNER_LC=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          docker build -t ghcr.io/$OWNER_LC/nexapod-server:latest -f Infrastructure/Dockerfile.server .
          docker build -t ghcr.io/$OWNER_LC/nexapod-client:latest -f Infrastructure/Dockerfile.client .
          docker push ghcr.io/$OWNER_LC/nexapod-server:latest
          docker push ghcr.io/$OWNER_LC/nexapod-client:latest

  deploy:
    needs: build_and_push
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to DigitalOcean
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DO_HOST }}
          username: ${{ secrets.DO_USERNAME }}
          key: ${{ secrets.DO_SSH_KEY }}
          script: |
            OWNER_LC=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
            # Log in to GHCR
            echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            
            # Stop and remove the old container if it exists
            docker stop nexapod-server || true
            docker rm nexapod-server || true
            
            # Pull the latest server image
            docker pull ghcr.io/$OWNER_LC/nexapod-server:latest
            
            # Run the new container
            docker run -d \
              --name nexapod-server \
              --restart always \
              -p 8000:8000 \
              ghcr.io/$OWNER_LC/nexapod-server:latest
